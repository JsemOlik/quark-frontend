[phases.setup]
nixPkgs = [
  "php83",
  "php83Extensions.redis",
  "php83Extensions.opcache",
  "php83Extensions.pdo",
  "php83Extensions.pdo_pgsql",
  "php83Extensions.pgsql",
  "php83Extensions.mbstring",
  "php83Extensions.xml",
  "php83Extensions.curl",
  "php83Extensions.fileinfo",
  "php83Extensions.bcmath",
  "php83Extensions.gd",
  "nginx",
  "nodejs_20",
  "python311Packages.supervisor"
]

[phases.install]
cmds = [
  "mkdir -p /var/log/nginx && mkdir -p /var/cache/nginx",
  # If composer.json/package.json exist, you can install here:
  "composer install --ignore-platform-reqs || true",
  "npm ci || true"
]

[phases.build]
cmds = [
  "mkdir -p /etc/supervisor/conf.d/",
  "cp /assets/worker-*.conf /etc/supervisor/conf.d/",
  "cp /assets/supervisord.conf /etc/supervisord.conf",
  "chmod +x /assets/start.sh",
  "cp /assets/php-fpm.conf /assets/php-fpm.conf"
]

[start]
cmd = "/assets/start.sh"

[variables]
# Prefer platform logging over file logs to avoid /app/storage/logs permissions
LOG_CHANNEL = "stack"
LOG_STACK_CHANNELS = "stderr,single"
LOG_LEVEL = "debug"

# Set SESSION_DRIVER=file unless youâ€™ve migrated sessions table
# SESSION_DRIVER = "file"
# If you use database sessions, ensure DB is ready and migrations run:
# SESSION_DRIVER = "database"

[staticAssets]
"start.sh" = '''
#!/bin/bash
set -euo pipefail

# Transform the nginx configuration
node /assets/scripts/prestart.mjs /assets/nginx.template.conf /etc/nginx.conf || true

# Laravel permissions (for cache, sessions, file logs)
if [ -d /app/storage ]; then
  chown -R www-data:www-data /app/storage /app/bootstrap/cache || true
  chmod -R ug+rwX /app/storage /app/bootstrap/cache || true
fi

# Optionally run migrations before services (set RUN_MIGRATIONS=0 to skip)
if [ -f /app/artisan ]; then
  if [ "${RUN_MIGRATIONS:-1}" = "1" ]; then
    echo "Attempting migrations..."
    # If using database sessions, ensure session migration exists
    if [ "${SESSION_DRIVER:-}" = "database" ]; then
      php /app/artisan session:table || true
    fi
    php /app/artisan migrate --force || true
  fi
fi

# Start supervisor (nginx, php-fpm, workers)
exec supervisord -c /etc/supervisord.conf -n
'''

"supervisord.conf" = '''
[unix_http_server]
file=/assets/supervisor.sock

[supervisord]
logfile=/var/log/supervisord.log
logfile_maxbytes=50MB
logfile_backups=10
loglevel=info
pidfile=/assets/supervisord.pid
nodaemon=false
silent=false
minfds=1024
minprocs=200

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///assets/supervisor.sock

[include]
files = /etc/supervisor/conf.d/*.conf
'''

"worker-nginx.conf" = '''
[program:worker-nginx]
process_name=%(program_name)s_%(process_num)02d
command=nginx -c /etc/nginx.conf
autostart=true
autorestart=true
stdout_logfile=/var/log/worker-nginx.log
stderr_logfile=/var/log/worker-nginx.log
'''

"worker-phpfpm.conf" = '''
[program:worker-phpfpm]
process_name=%(program_name)s_%(process_num)02d
command=php-fpm -y /assets/php-fpm.conf -F
autostart=true
autorestart=true
stdout_logfile=/var/log/worker-phpfpm.log
stderr_logfile=/var/log/worker-phpfpm.log
'''

"worker-laravel.conf" = '''
[program:worker-laravel]
process_name=%(program_name)s_%(process_num)02d
command=bash -c 'exec php /app/artisan queue:work --sleep=3 --tries=3 --max-time=3600'
autostart=true
autorestart=true
stopasgroup=true
killasgroup=true
numprocs=2
startsecs=2
stopwaitsecs=3600
stdout_logfile=/var/log/worker-laravel.log
stderr_logfile=/var/log/worker-laravel.log
'''

"worker-inertia-ssr.conf" = '''
[program:inertia-ssr]
process_name=%(program_name)s_%(process_num)02d
command=bash -c 'exec php /app/artisan inertia:start-ssr'
autostart=true
autorestart=true
startsecs=2
stderr_logfile=/var/log/worker-inertia-ssr.log
stdout_logfile=/var/log/worker-inertia-ssr.log
'''

"php-fpm.conf" = '''
[www]
listen = 127.0.0.1:9000
user = www-data
group = www-data
listen.owner = www-data
listen.group = www-data
pm = dynamic
pm.max_children = 50
pm.min_spare_servers = 4
pm.max_spare_servers = 32
pm.start_servers = 18
clear_env = no
php_admin_value[post_max_size] = 35M
php_admin_value[upload_max_filesize] = 30M
'''

"nginx.template.conf" = '''
user www-data www-data;
worker_processes 5;
daemon off;

worker_rlimit_nofile 8192;

events {
  worker_connections 4096;
}

http {
  include $!{nginx}/conf/mime.types;
  index index.html index.htm index.php;

  default_type application/octet-stream;
  log_format main '$remote_addr - $remote_user [$time_local] $status '
                  '"$request" $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx-access.log;
  error_log /var/log/nginx-error.log;
  sendfile on;
  tcp_nopush on;
  server_names_hash_bucket_size 128;

  server {
    listen ${PORT};
    listen [::]:${PORT};
    server_name localhost;

    $if(NIXPACKS_PHP_ROOT_DIR) (
      root ${NIXPACKS_PHP_ROOT_DIR};
    ) else (
      root /app;
    )

    add_header X-Content-Type-Options "nosniff";
    client_max_body_size 35M;
    index index.php;
    charset utf-8;

    $if(NIXPACKS_PHP_FALLBACK_PATH) (
      location / {
        try_files $uri $uri/ ${NIXPACKS_PHP_FALLBACK_PATH}?$query_string;
      }
    ) else (
      location / {
        try_files $uri $uri/ /index.php?$query_string;
      }
    )

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    $if(IS_LARAVEL) (
      error_page 404 /index.php;
    ) else ()

    location ~ \.php$ {
      fastcgi_buffer_size 8k;
      fastcgi_pass 127.0.0.1:9000;
      fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
      include $!{nginx}/conf/fastcgi_params;
      include $!{nginx}/conf/fastcgi.conf;
    }

    location ~ /\.(?!well-known).* {
      deny all;
    }
  }
}
'''
